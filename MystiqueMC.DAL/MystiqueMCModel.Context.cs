//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MystiqueMC.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MystiqueMeEntities : DbContext
    {
        public MystiqueMeEntities()
            : base("name=MystiqueMeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AgrupadorInsumos> AgrupadorInsumos { get; set; }
        public virtual DbSet<AreaPreparacion> AreaPreparacion { get; set; }
        public virtual DbSet<Arqueo> Arqueo { get; set; }
        public virtual DbSet<CatConceptosGastos> CatConceptosGastos { get; set; }
        public virtual DbSet<CategoriaIngrediente> CategoriaIngrediente { get; set; }
        public virtual DbSet<CategoriaInsumo> CategoriaInsumo { get; set; }
        public virtual DbSet<CategoriaProductos> CategoriaProductos { get; set; }
        public virtual DbSet<CatEstatusEquipo> CatEstatusEquipo { get; set; }
        public virtual DbSet<CatEstatusOrden> CatEstatusOrden { get; set; }
        public virtual DbSet<CatGastos> CatGastos { get; set; }
        public virtual DbSet<CatMovimientoInventarios> CatMovimientoInventarios { get; set; }
        public virtual DbSet<CatRubros> CatRubros { get; set; }
        public virtual DbSet<CatRubrosGastos> CatRubrosGastos { get; set; }
        public virtual DbSet<CatTipoEquipo> CatTipoEquipo { get; set; }
        public virtual DbSet<CatTipoMantenimiento> CatTipoMantenimiento { get; set; }
        public virtual DbSet<CatTipoPagos> CatTipoPagos { get; set; }
        public virtual DbSet<Compras> Compras { get; set; }
        public virtual DbSet<ConfiguracionArmadoProductos> ConfiguracionArmadoProductos { get; set; }
        public virtual DbSet<ConteoFisicoAgrupadorInsumos> ConteoFisicoAgrupadorInsumos { get; set; }
        public virtual DbSet<ConteoFisicoInsumos> ConteoFisicoInsumos { get; set; }
        public virtual DbSet<ConteoFisicoPeriodoCaptura> ConteoFisicoPeriodoCaptura { get; set; }
        public virtual DbSet<ConteoFisicoTipoRegistro> ConteoFisicoTipoRegistro { get; set; }
        public virtual DbSet<Descuentos> Descuentos { get; set; }
        public virtual DbSet<DetalleCompra> DetalleCompra { get; set; }
        public virtual DbSet<DetalleCompraReapertura> DetalleCompraReapertura { get; set; }
        public virtual DbSet<DetalleRecetaProcesados> DetalleRecetaProcesados { get; set; }
        public virtual DbSet<DetalleRecetaProducto> DetalleRecetaProducto { get; set; }
        public virtual DbSet<Equivalencias> Equivalencias { get; set; }
        public virtual DbSet<Gastos> Gastos { get; set; }
        public virtual DbSet<InsumoProductos> InsumoProductos { get; set; }
        public virtual DbSet<Insumos> Insumos { get; set; }
        public virtual DbSet<Inventarios> Inventarios { get; set; }
        public virtual DbSet<MantenimientoMobiliarioEquipos> MantenimientoMobiliarioEquipos { get; set; }
        public virtual DbSet<MobiliarioEquipos> MobiliarioEquipos { get; set; }
        public virtual DbSet<MovimientoInventarios> MovimientoInventarios { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<Proveedores> Proveedores { get; set; }
        public virtual DbSet<Recetas> Recetas { get; set; }
        public virtual DbSet<RecetasProcesados> RecetasProcesados { get; set; }
        public virtual DbSet<RegistroConteoFisicoInsumos> RegistroConteoFisicoInsumos { get; set; }
        public virtual DbSet<SucursalDescuentos> SucursalDescuentos { get; set; }
        public virtual DbSet<SucursalProductos> SucursalProductos { get; set; }
        public virtual DbSet<SucursalProveedores> SucursalProveedores { get; set; }
        public virtual DbSet<TipoRecetas> TipoRecetas { get; set; }
        public virtual DbSet<UnidadMedida> UnidadMedida { get; set; }
        public virtual DbSet<VariedadProductos> VariedadProductos { get; set; }
        public virtual DbSet<Aperturas> Aperturas { get; set; }
        public virtual DbSet<Clientespv> Clientespv { get; set; }
        public virtual DbSet<ConsumoEmpleados> ConsumoEmpleados { get; set; }
        public virtual DbSet<GastosPv> GastosPv { get; set; }
        public virtual DbSet<GastosPvDetalle> GastosPvDetalle { get; set; }
        public virtual DbSet<InsumoProducto> InsumoProducto { get; set; }
        public virtual DbSet<PedidoProductoDetalle> PedidoProductoDetalle { get; set; }
        public virtual DbSet<PedidoProductos> PedidoProductos { get; set; }
        public virtual DbSet<Pedidos> Pedidos { get; set; }
        public virtual DbSet<Retiros> Retiros { get; set; }
        public virtual DbSet<TicketCancelados> TicketCancelados { get; set; }
        public virtual DbSet<TicketDescuentos> TicketDescuentos { get; set; }
        public virtual DbSet<TicketPagos> TicketPagos { get; set; }
        public virtual DbSet<TicketReimpresos> TicketReimpresos { get; set; }
        public virtual DbSet<Tickets> Tickets { get; set; }
        public virtual DbSet<Ventas> Ventas { get; set; }
        public virtual DbSet<AnexoDoctor> AnexoDoctor { get; set; }
        public virtual DbSet<AspNetController> AspNetController { get; set; }
        public virtual DbSet<AspNetControllerActivity> AspNetControllerActivity { get; set; }
        public virtual DbSet<AspNetRolePermissions> AspNetRolePermissions { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<beneficioAplicados> beneficioAplicados { get; set; }
        public virtual DbSet<beneficioCalificaciones> beneficioCalificaciones { get; set; }
        public virtual DbSet<beneficioHorarios> beneficioHorarios { get; set; }
        public virtual DbSet<beneficios> beneficios { get; set; }
        public virtual DbSet<bitacoraFacturacion> bitacoraFacturacion { get; set; }
        public virtual DbSet<canjePuntos> canjePuntos { get; set; }
        public virtual DbSet<cargaCompras> cargaCompras { get; set; }
        public virtual DbSet<CatAseguranzas> CatAseguranzas { get; set; }
        public virtual DbSet<catCiudades> catCiudades { get; set; }
        public virtual DbSet<catColonias> catColonias { get; set; }
        public virtual DbSet<catComercioGiros> catComercioGiros { get; set; }
        public virtual DbSet<catCompraAplicadoEstatus> catCompraAplicadoEstatus { get; set; }
        public virtual DbSet<CatDoctorEspecialidad> CatDoctorEspecialidad { get; set; }
        public virtual DbSet<catEstados> catEstados { get; set; }
        public virtual DbSet<catEstatusAplicaPuntos> catEstatusAplicaPuntos { get; set; }
        public virtual DbSet<catEstatusCanjePuntos> catEstatusCanjePuntos { get; set; }
        public virtual DbSet<catEstatusCargaCompras> catEstatusCargaCompras { get; set; }
        public virtual DbSet<CatEstatusCita> CatEstatusCita { get; set; }
        public virtual DbSet<CatEstatusCompras> CatEstatusCompras { get; set; }
        public virtual DbSet<catEstatusFactura> catEstatusFactura { get; set; }
        public virtual DbSet<catEstatusTicket> catEstatusTicket { get; set; }
        public virtual DbSet<catPaises> catPaises { get; set; }
        public virtual DbSet<catProductos> catProductos { get; set; }
        public virtual DbSet<catRangoEdad> catRangoEdad { get; set; }
        public virtual DbSet<catRegimenFiscal> catRegimenFiscal { get; set; }
        public virtual DbSet<catSexos> catSexos { get; set; }
        public virtual DbSet<catTipoAutentificacion> catTipoAutentificacion { get; set; }
        public virtual DbSet<catTipoComentario> catTipoComentario { get; set; }
        public virtual DbSet<catTipoComercios> catTipoComercios { get; set; }
        public virtual DbSet<catTipoMembresias> catTipoMembresias { get; set; }
        public virtual DbSet<CatTipoNotificaciones> CatTipoNotificaciones { get; set; }
        public virtual DbSet<catTipoRecompensas> catTipoRecompensas { get; set; }
        public virtual DbSet<catUsoCFDI> catUsoCFDI { get; set; }
        public virtual DbSet<CatZonas> CatZonas { get; set; }
        public virtual DbSet<Citas> Citas { get; set; }
        public virtual DbSet<clienteNotificaciones> clienteNotificaciones { get; set; }
        public virtual DbSet<clientes> clientes { get; set; }
        public virtual DbSet<comentarios> comentarios { get; set; }
        public virtual DbSet<comercios> comercios { get; set; }
        public virtual DbSet<confBeneficioSucursal> confBeneficioSucursal { get; set; }
        public virtual DbSet<confDatosFiscalesSucursal> confDatosFiscalesSucursal { get; set; }
        public virtual DbSet<ConfiguracionCompras> ConfiguracionCompras { get; set; }
        public virtual DbSet<configuracionSistema> configuracionSistema { get; set; }
        public virtual DbSet<confProductoPVEquivalencia> confProductoPVEquivalencia { get; set; }
        public virtual DbSet<confSumaPuntos> confSumaPuntos { get; set; }
        public virtual DbSet<confUsuarioComercio> confUsuarioComercio { get; set; }
        public virtual DbSet<ConfUsuarioSucursales> ConfUsuarioSucursales { get; set; }
        public virtual DbSet<datosFiscales> datosFiscales { get; set; }
        public virtual DbSet<datosReceptor> datosReceptor { get; set; }
        public virtual DbSet<detalleTicketSucursal> detalleTicketSucursal { get; set; }
        public virtual DbSet<direccion> direccion { get; set; }
        public virtual DbSet<DoctorAseguranzas> DoctorAseguranzas { get; set; }
        public virtual DbSet<empresaBrandy> empresaBrandy { get; set; }
        public virtual DbSet<empresaContactos> empresaContactos { get; set; }
        public virtual DbSet<empresaKardex> empresaKardex { get; set; }
        public virtual DbSet<empresas> empresas { get; set; }
        public virtual DbSet<facturaCliente> facturaCliente { get; set; }
        public virtual DbSet<facturaPendiente> facturaPendiente { get; set; }
        public virtual DbSet<historicoCancelacionRecompensas> historicoCancelacionRecompensas { get; set; }
        public virtual DbSet<ImagenDoctor> ImagenDoctor { get; set; }
        public virtual DbSet<login> login { get; set; }
        public virtual DbSet<membresias> membresias { get; set; }
        public virtual DbSet<movimientoPuntos> movimientoPuntos { get; set; }
        public virtual DbSet<notificaciones> notificaciones { get; set; }
        public virtual DbSet<ProductoEstaConfigurado> ProductoEstaConfigurado { get; set; }
        public virtual DbSet<ProductoTieneReceta> ProductoTieneReceta { get; set; }
        public virtual DbSet<receptorCliente> receptorCliente { get; set; }
        public virtual DbSet<recompensas> recompensas { get; set; }
        public virtual DbSet<representateLegal> representateLegal { get; set; }
        public virtual DbSet<saldoPuntos> saldoPuntos { get; set; }
        public virtual DbSet<SectoresNotificaciones> SectoresNotificaciones { get; set; }
        public virtual DbSet<sucursales> sucursales { get; set; }
        public virtual DbSet<sucursalHorarios> sucursalHorarios { get; set; }
        public virtual DbSet<SucursalNotificaciones> SucursalNotificaciones { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<ticketSucursal> ticketSucursal { get; set; }
        public virtual DbSet<trasladosImpuestosTicket> trasladosImpuestosTicket { get; set; }
        public virtual DbSet<usuarios> usuarios { get; set; }
        public virtual DbSet<wallet> wallet { get; set; }
        public virtual DbSet<AggregatedCounter> AggregatedCounter { get; set; }
        public virtual DbSet<Counter> Counter { get; set; }
        public virtual DbSet<Hash> Hash { get; set; }
        public virtual DbSet<Job> Job { get; set; }
        public virtual DbSet<JobParameter> JobParameter { get; set; }
        public virtual DbSet<JobQueue> JobQueue { get; set; }
        public virtual DbSet<List> List { get; set; }
        public virtual DbSet<Schema> Schema { get; set; }
        public virtual DbSet<Server> Server { get; set; }
        public virtual DbSet<Set> Set { get; set; }
        public virtual DbSet<State> State { get; set; }
        public virtual DbSet<Articulos> Articulos { get; set; }
        public virtual DbSet<CatCategoriaArticulos> CatCategoriaArticulos { get; set; }
        public virtual DbSet<CatSubCategoriaArticulos> CatSubCategoriaArticulos { get; set; }
        public virtual DbSet<BitacoraDoctor> BitacoraDoctor { get; set; }
        public virtual DbSet<VW_PV_Listado_Ventas> VW_PV_Listado_Ventas { get; set; }
        public virtual DbSet<VW_PV_Ticket_Pedido_Productos> VW_PV_Ticket_Pedido_Productos { get; set; }
        public virtual DbSet<VW_PV_Ticket_Pedido_Productos_Combos> VW_PV_Ticket_Pedido_Productos_Combos { get; set; }
        public virtual DbSet<VW_ClientesEdadesPorRango> VW_ClientesEdadesPorRango { get; set; }
        public virtual DbSet<VW_ObtenerClientesConMembresia> VW_ObtenerClientesConMembresia { get; set; }
        public virtual DbSet<VW_ObtenerConfiguracionPuntosComercio> VW_ObtenerConfiguracionPuntosComercio { get; set; }
        public virtual DbSet<VW_ObtenerListadoCupones> VW_ObtenerListadoCupones { get; set; }
        public virtual DbSet<VW_ObtenerRecompensasPorProductos> VW_ObtenerRecompensasPorProductos { get; set; }
        public virtual DbSet<VW_ObtenerUsuarios> VW_ObtenerUsuarios { get; set; }
        public virtual DbSet<VW_Permisos> VW_Permisos { get; set; }
        public virtual DbSet<VW_REPORTE_MACHOTE> VW_REPORTE_MACHOTE { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_CanjearRecompensa(Nullable<int> inMembresiaId, Nullable<int> inRecompensaId, string inFolioCanje, Nullable<int> inSucursalId, Nullable<int> inCanjePuntoId, string inFolioCompra, Nullable<decimal> inMontoCompra, ObjectParameter resultado)
        {
            var inMembresiaIdParameter = inMembresiaId.HasValue ?
                new ObjectParameter("inMembresiaId", inMembresiaId) :
                new ObjectParameter("inMembresiaId", typeof(int));
    
            var inRecompensaIdParameter = inRecompensaId.HasValue ?
                new ObjectParameter("inRecompensaId", inRecompensaId) :
                new ObjectParameter("inRecompensaId", typeof(int));
    
            var inFolioCanjeParameter = inFolioCanje != null ?
                new ObjectParameter("inFolioCanje", inFolioCanje) :
                new ObjectParameter("inFolioCanje", typeof(string));
    
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var inCanjePuntoIdParameter = inCanjePuntoId.HasValue ?
                new ObjectParameter("inCanjePuntoId", inCanjePuntoId) :
                new ObjectParameter("inCanjePuntoId", typeof(int));
    
            var inFolioCompraParameter = inFolioCompra != null ?
                new ObjectParameter("inFolioCompra", inFolioCompra) :
                new ObjectParameter("inFolioCompra", typeof(string));
    
            var inMontoCompraParameter = inMontoCompra.HasValue ?
                new ObjectParameter("inMontoCompra", inMontoCompra) :
                new ObjectParameter("inMontoCompra", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CanjearRecompensa", inMembresiaIdParameter, inRecompensaIdParameter, inFolioCanjeParameter, inSucursalIdParameter, inCanjePuntoIdParameter, inFolioCompraParameter, inMontoCompraParameter, resultado);
        }
    
        public virtual int SP_CargarPuntosPorCompra(Nullable<int> inMembresiaId, Nullable<System.DateTime> inFechaCompra, string inFolioCompra, Nullable<decimal> inMontoCompra, Nullable<int> inSucursalId, string inCodigoCompra, Nullable<int> inComercio, ObjectParameter resultado)
        {
            var inMembresiaIdParameter = inMembresiaId.HasValue ?
                new ObjectParameter("inMembresiaId", inMembresiaId) :
                new ObjectParameter("inMembresiaId", typeof(int));
    
            var inFechaCompraParameter = inFechaCompra.HasValue ?
                new ObjectParameter("inFechaCompra", inFechaCompra) :
                new ObjectParameter("inFechaCompra", typeof(System.DateTime));
    
            var inFolioCompraParameter = inFolioCompra != null ?
                new ObjectParameter("inFolioCompra", inFolioCompra) :
                new ObjectParameter("inFolioCompra", typeof(string));
    
            var inMontoCompraParameter = inMontoCompra.HasValue ?
                new ObjectParameter("inMontoCompra", inMontoCompra) :
                new ObjectParameter("inMontoCompra", typeof(decimal));
    
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var inCodigoCompraParameter = inCodigoCompra != null ?
                new ObjectParameter("inCodigoCompra", inCodigoCompra) :
                new ObjectParameter("inCodigoCompra", typeof(string));
    
            var inComercioParameter = inComercio.HasValue ?
                new ObjectParameter("inComercio", inComercio) :
                new ObjectParameter("inComercio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CargarPuntosPorCompra", inMembresiaIdParameter, inFechaCompraParameter, inFolioCompraParameter, inMontoCompraParameter, inSucursalIdParameter, inCodigoCompraParameter, inComercioParameter, resultado);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_EliminarCliente(Nullable<int> inClienteId, ObjectParameter resultado)
        {
            var inClienteIdParameter = inClienteId.HasValue ?
                new ObjectParameter("inClienteId", inClienteId) :
                new ObjectParameter("inClienteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarCliente", inClienteIdParameter, resultado);
        }
    
        public virtual int SP_EliminarRecompensa(Nullable<int> inMembresiaId, Nullable<int> inFolioRecompensa, ObjectParameter resultado)
        {
            var inMembresiaIdParameter = inMembresiaId.HasValue ?
                new ObjectParameter("inMembresiaId", inMembresiaId) :
                new ObjectParameter("inMembresiaId", typeof(int));
    
            var inFolioRecompensaParameter = inFolioRecompensa.HasValue ?
                new ObjectParameter("inFolioRecompensa", inFolioRecompensa) :
                new ObjectParameter("inFolioRecompensa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarRecompensa", inMembresiaIdParameter, inFolioRecompensaParameter, resultado);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_JOB_EliminarRecompensasNoCanjeadas(ObjectParameter resultado)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_JOB_EliminarRecompensasNoCanjeadas", resultado);
        }
    
        public virtual ObjectResult<SP_Obtener_BeneficioCalificacion_Result> SP_Obtener_BeneficioCalificacion(Nullable<int> idBeneficio, Nullable<long> idCliente)
        {
            var idBeneficioParameter = idBeneficio.HasValue ?
                new ObjectParameter("idBeneficio", idBeneficio) :
                new ObjectParameter("idBeneficio", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Obtener_BeneficioCalificacion_Result>("SP_Obtener_BeneficioCalificacion", idBeneficioParameter, idClienteParameter);
        }
    
        public virtual ObjectResult<SP_Obtener_Comercio_Giro_Result> SP_Obtener_Comercio_Giro(Nullable<int> giroId)
        {
            var giroIdParameter = giroId.HasValue ?
                new ObjectParameter("giroId", giroId) :
                new ObjectParameter("giroId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Obtener_Comercio_Giro_Result>("SP_Obtener_Comercio_Giro", giroIdParameter);
        }
    
        public virtual ObjectResult<SP_Obtener_DetalleBeneficio_Result> SP_Obtener_DetalleBeneficio(Nullable<int> idBeneficio, Nullable<long> idCliente, Nullable<int> idSucursal)
        {
            var idBeneficioParameter = idBeneficio.HasValue ?
                new ObjectParameter("idBeneficio", idBeneficio) :
                new ObjectParameter("idBeneficio", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(long));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("idSucursal", idSucursal) :
                new ObjectParameter("idSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Obtener_DetalleBeneficio_Result>("SP_Obtener_DetalleBeneficio", idBeneficioParameter, idClienteParameter, idSucursalParameter);
        }
    
        public virtual ObjectResult<SP_Obtener_ListaWallet_Cliente_Result> SP_Obtener_ListaWallet_Cliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Obtener_ListaWallet_Cliente_Result>("SP_Obtener_ListaWallet_Cliente", idClienteParameter);
        }
    
        public virtual ObjectResult<SP_Obtener_Sucursal_Comercio_Result> SP_Obtener_Sucursal_Comercio(Nullable<int> comercioId)
        {
            var comercioIdParameter = comercioId.HasValue ?
                new ObjectParameter("comercioId", comercioId) :
                new ObjectParameter("comercioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Obtener_Sucursal_Comercio_Result>("SP_Obtener_Sucursal_Comercio", comercioIdParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerBeneficiosSucursal_Result> SP_ObtenerBeneficiosSucursal(Nullable<int> sucursalId, Nullable<int> empresaId, Nullable<int> clienteId, Nullable<int> membresiaId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("sucursalId", sucursalId) :
                new ObjectParameter("sucursalId", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("empresaId", empresaId) :
                new ObjectParameter("empresaId", typeof(int));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("clienteId", clienteId) :
                new ObjectParameter("clienteId", typeof(int));
    
            var membresiaIdParameter = membresiaId.HasValue ?
                new ObjectParameter("membresiaId", membresiaId) :
                new ObjectParameter("membresiaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerBeneficiosSucursal_Result>("SP_ObtenerBeneficiosSucursal", sucursalIdParameter, empresaIdParameter, clienteIdParameter, membresiaIdParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerListadoMovimientosPuntos_Result> SP_ObtenerListadoMovimientosPuntos(Nullable<int> membresiaId, Nullable<int> comercioId)
        {
            var membresiaIdParameter = membresiaId.HasValue ?
                new ObjectParameter("membresiaId", membresiaId) :
                new ObjectParameter("membresiaId", typeof(int));
    
            var comercioIdParameter = comercioId.HasValue ?
                new ObjectParameter("comercioId", comercioId) :
                new ObjectParameter("comercioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerListadoMovimientosPuntos_Result>("SP_ObtenerListadoMovimientosPuntos", membresiaIdParameter, comercioIdParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerListadoRecompensas_Result> SP_ObtenerListadoRecompensas(Nullable<int> comercioId, Nullable<int> tipoMembresia)
        {
            var comercioIdParameter = comercioId.HasValue ?
                new ObjectParameter("comercioId", comercioId) :
                new ObjectParameter("comercioId", typeof(int));
    
            var tipoMembresiaParameter = tipoMembresia.HasValue ?
                new ObjectParameter("tipoMembresia", tipoMembresia) :
                new ObjectParameter("tipoMembresia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerListadoRecompensas_Result>("SP_ObtenerListadoRecompensas", comercioIdParameter, tipoMembresiaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerListaMovimientosPuntos_Result> SP_ObtenerListaMovimientosPuntos(Nullable<int> membresiaId, Nullable<int> comercioId)
        {
            var membresiaIdParameter = membresiaId.HasValue ?
                new ObjectParameter("membresiaId", membresiaId) :
                new ObjectParameter("membresiaId", typeof(int));
    
            var comercioIdParameter = comercioId.HasValue ?
                new ObjectParameter("comercioId", comercioId) :
                new ObjectParameter("comercioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerListaMovimientosPuntos_Result>("SP_ObtenerListaMovimientosPuntos", membresiaIdParameter, comercioIdParameter);
        }
    
        public virtual int SP_RegistrarCanjePuntos(Nullable<int> inMembresiaId, Nullable<int> inRecompensaId, string inFolioCanje, ObjectParameter resultado)
        {
            var inMembresiaIdParameter = inMembresiaId.HasValue ?
                new ObjectParameter("inMembresiaId", inMembresiaId) :
                new ObjectParameter("inMembresiaId", typeof(int));
    
            var inRecompensaIdParameter = inRecompensaId.HasValue ?
                new ObjectParameter("inRecompensaId", inRecompensaId) :
                new ObjectParameter("inRecompensaId", typeof(int));
    
            var inFolioCanjeParameter = inFolioCanje != null ?
                new ObjectParameter("inFolioCanje", inFolioCanje) :
                new ObjectParameter("inFolioCanje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RegistrarCanjePuntos", inMembresiaIdParameter, inRecompensaIdParameter, inFolioCanjeParameter, resultado);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SP_PV_Cancelados_Result> SP_PV_Cancelados(Nullable<int> inSucursalId, Nullable<System.DateTime> inFechaInicio, Nullable<System.DateTime> inFechaFin)
        {
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var inFechaInicioParameter = inFechaInicio.HasValue ?
                new ObjectParameter("inFechaInicio", inFechaInicio) :
                new ObjectParameter("inFechaInicio", typeof(System.DateTime));
    
            var inFechaFinParameter = inFechaFin.HasValue ?
                new ObjectParameter("inFechaFin", inFechaFin) :
                new ObjectParameter("inFechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Cancelados_Result>("SP_PV_Cancelados", inSucursalIdParameter, inFechaInicioParameter, inFechaFinParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Consumo_Agrupado_Detalle_Result> SP_PV_Reporte_Consumo_Agrupado_Detalle(Nullable<int> inSucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> familiaId)
        {
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var familiaIdParameter = familiaId.HasValue ?
                new ObjectParameter("familiaId", familiaId) :
                new ObjectParameter("familiaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Consumo_Agrupado_Detalle_Result>("SP_PV_Reporte_Consumo_Agrupado_Detalle", inSucursalIdParameter, fechaInicioParameter, fechaFinalParameter, familiaIdParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Consumo_Empleado_Result> SP_PV_Reporte_Consumo_Empleado(Nullable<int> inSucursalId, Nullable<System.DateTime> inFechaInicio, Nullable<System.DateTime> inFechaFin)
        {
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var inFechaInicioParameter = inFechaInicio.HasValue ?
                new ObjectParameter("inFechaInicio", inFechaInicio) :
                new ObjectParameter("inFechaInicio", typeof(System.DateTime));
    
            var inFechaFinParameter = inFechaFin.HasValue ?
                new ObjectParameter("inFechaFin", inFechaFin) :
                new ObjectParameter("inFechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Consumo_Empleado_Result>("SP_PV_Reporte_Consumo_Empleado", inSucursalIdParameter, inFechaInicioParameter, inFechaFinParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Cortes_Detallado_Result> SP_PV_Reporte_Cortes_Detallado(Nullable<int> inSucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal)
        {
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Cortes_Detallado_Result>("SP_PV_Reporte_Cortes_Detallado", inSucursalIdParameter, fechaInicioParameter, fechaFinalParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Cortes_Z_Result> SP_PV_Reporte_Cortes_Z(Nullable<int> inSucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal)
        {
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Cortes_Z_Result>("SP_PV_Reporte_Cortes_Z", inSucursalIdParameter, fechaInicioParameter, fechaFinalParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Gastos_Caja_Result> SP_PV_Reporte_Gastos_Caja(Nullable<int> inSucursalId, Nullable<System.DateTime> inFechaInicio, Nullable<System.DateTime> inFechaFin)
        {
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var inFechaInicioParameter = inFechaInicio.HasValue ?
                new ObjectParameter("inFechaInicio", inFechaInicio) :
                new ObjectParameter("inFechaInicio", typeof(System.DateTime));
    
            var inFechaFinParameter = inFechaFin.HasValue ?
                new ObjectParameter("inFechaFin", inFechaFin) :
                new ObjectParameter("inFechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Gastos_Caja_Result>("SP_PV_Reporte_Gastos_Caja", inSucursalIdParameter, inFechaInicioParameter, inFechaFinParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Ventas_Result> SP_PV_Reporte_Ventas(Nullable<System.DateTime> inFechaInicial, Nullable<System.DateTime> inFechaFinal, string inHoraInicio, string inHoraFin, Nullable<bool> deVentas, Nullable<int> inScucursalId)
        {
            var inFechaInicialParameter = inFechaInicial.HasValue ?
                new ObjectParameter("inFechaInicial", inFechaInicial) :
                new ObjectParameter("inFechaInicial", typeof(System.DateTime));
    
            var inFechaFinalParameter = inFechaFinal.HasValue ?
                new ObjectParameter("inFechaFinal", inFechaFinal) :
                new ObjectParameter("inFechaFinal", typeof(System.DateTime));
    
            var inHoraInicioParameter = inHoraInicio != null ?
                new ObjectParameter("inHoraInicio", inHoraInicio) :
                new ObjectParameter("inHoraInicio", typeof(string));
    
            var inHoraFinParameter = inHoraFin != null ?
                new ObjectParameter("inHoraFin", inHoraFin) :
                new ObjectParameter("inHoraFin", typeof(string));
    
            var deVentasParameter = deVentas.HasValue ?
                new ObjectParameter("deVentas", deVentas) :
                new ObjectParameter("deVentas", typeof(bool));
    
            var inScucursalIdParameter = inScucursalId.HasValue ?
                new ObjectParameter("inScucursalId", inScucursalId) :
                new ObjectParameter("inScucursalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Ventas_Result>("SP_PV_Reporte_Ventas", inFechaInicialParameter, inFechaFinalParameter, inHoraInicioParameter, inHoraFinParameter, deVentasParameter, inScucursalIdParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Ventas_Por_Horas_Result> SP_PV_Reporte_Ventas_Por_Horas(Nullable<System.DateTime> inFechaInicial, Nullable<System.DateTime> inFechaFinal, Nullable<bool> deVentas, Nullable<int> inScucursalId)
        {
            var inFechaInicialParameter = inFechaInicial.HasValue ?
                new ObjectParameter("inFechaInicial", inFechaInicial) :
                new ObjectParameter("inFechaInicial", typeof(System.DateTime));
    
            var inFechaFinalParameter = inFechaFinal.HasValue ?
                new ObjectParameter("inFechaFinal", inFechaFinal) :
                new ObjectParameter("inFechaFinal", typeof(System.DateTime));
    
            var deVentasParameter = deVentas.HasValue ?
                new ObjectParameter("deVentas", deVentas) :
                new ObjectParameter("deVentas", typeof(bool));
    
            var inScucursalIdParameter = inScucursalId.HasValue ?
                new ObjectParameter("inScucursalId", inScucursalId) :
                new ObjectParameter("inScucursalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Ventas_Por_Horas_Result>("SP_PV_Reporte_Ventas_Por_Horas", inFechaInicialParameter, inFechaFinalParameter, deVentasParameter, inScucursalIdParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Canje_Beneficios_Result> SP_Reporte_Canje_Beneficios(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> empresaId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("sucursalId", sucursalId) :
                new ObjectParameter("sucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("empresaId", empresaId) :
                new ObjectParameter("empresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Canje_Beneficios_Result>("SP_Reporte_Canje_Beneficios", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Canje_Productos_Result> SP_Reporte_Canje_Productos(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> empresaId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("sucursalId", sucursalId) :
                new ObjectParameter("sucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("empresaId", empresaId) :
                new ObjectParameter("empresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Canje_Productos_Result>("SP_Reporte_Canje_Productos", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Clientes_Result> SP_Reporte_Clientes(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> empresaId)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("empresaId", empresaId) :
                new ObjectParameter("empresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Clientes_Result>("SP_Reporte_Clientes", fechaInicioParameter, fechaFinParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Registro_Compras_Result> SP_Reporte_Registro_Compras(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> empresaId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("sucursalId", sucursalId) :
                new ObjectParameter("sucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("empresaId", empresaId) :
                new ObjectParameter("empresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Registro_Compras_Result>("SP_Reporte_Registro_Compras", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, empresaIdParameter);
        }
    
        public virtual int SP_PV_Copiar_Productos_Comercio_Sucursal(Nullable<int> inSucursalId, Nullable<int> inComercioId, Nullable<int> inUsuarioRegistraId, ObjectParameter resultado)
        {
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var inComercioIdParameter = inComercioId.HasValue ?
                new ObjectParameter("inComercioId", inComercioId) :
                new ObjectParameter("inComercioId", typeof(int));
    
            var inUsuarioRegistraIdParameter = inUsuarioRegistraId.HasValue ?
                new ObjectParameter("inUsuarioRegistraId", inUsuarioRegistraId) :
                new ObjectParameter("inUsuarioRegistraId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PV_Copiar_Productos_Comercio_Sucursal", inSucursalIdParameter, inComercioIdParameter, inUsuarioRegistraIdParameter, resultado);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_PV_Reporte_Ventas_promedioTicket(Nullable<System.DateTime> inFechaInicial, Nullable<System.DateTime> inFechaFinal, Nullable<int> inScucursalId)
        {
            var inFechaInicialParameter = inFechaInicial.HasValue ?
                new ObjectParameter("inFechaInicial", inFechaInicial) :
                new ObjectParameter("inFechaInicial", typeof(System.DateTime));
    
            var inFechaFinalParameter = inFechaFinal.HasValue ?
                new ObjectParameter("inFechaFinal", inFechaFinal) :
                new ObjectParameter("inFechaFinal", typeof(System.DateTime));
    
            var inScucursalIdParameter = inScucursalId.HasValue ?
                new ObjectParameter("inScucursalId", inScucursalId) :
                new ObjectParameter("inScucursalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_PV_Reporte_Ventas_promedioTicket", inFechaInicialParameter, inFechaFinalParameter, inScucursalIdParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Receta_Producto_Conteo_Manual_Result> SP_PV_Reporte_Receta_Producto_Conteo_Manual(Nullable<int> inSucursalId, Nullable<System.DateTime> fechaInicial, Nullable<System.DateTime> fechaFinal, Nullable<bool> unidadBase)
        {
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var fechaInicialParameter = fechaInicial.HasValue ?
                new ObjectParameter("fechaInicial", fechaInicial) :
                new ObjectParameter("fechaInicial", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var unidadBaseParameter = unidadBase.HasValue ?
                new ObjectParameter("unidadBase", unidadBase) :
                new ObjectParameter("unidadBase", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Receta_Producto_Conteo_Manual_Result>("SP_PV_Reporte_Receta_Producto_Conteo_Manual", inSucursalIdParameter, fechaInicialParameter, fechaFinalParameter, unidadBaseParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Receta_Producto_Conteo_Manual_Detalle_Result> SP_PV_Reporte_Receta_Producto_Conteo_Manual_Detalle(Nullable<int> inSucursalId, Nullable<System.DateTime> fechaInicial, Nullable<System.DateTime> fechaFinal, Nullable<int> insumoId)
        {
            var inSucursalIdParameter = inSucursalId.HasValue ?
                new ObjectParameter("inSucursalId", inSucursalId) :
                new ObjectParameter("inSucursalId", typeof(int));
    
            var fechaInicialParameter = fechaInicial.HasValue ?
                new ObjectParameter("fechaInicial", fechaInicial) :
                new ObjectParameter("fechaInicial", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var insumoIdParameter = insumoId.HasValue ?
                new ObjectParameter("insumoId", insumoId) :
                new ObjectParameter("insumoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Receta_Producto_Conteo_Manual_Detalle_Result>("SP_PV_Reporte_Receta_Producto_Conteo_Manual_Detalle", inSucursalIdParameter, fechaInicialParameter, fechaFinalParameter, insumoIdParameter);
        }
    
        public virtual ObjectResult<SP_ReporteVentasGrafica_Result> SP_ReporteVentasGrafica()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ReporteVentasGrafica_Result>("SP_ReporteVentasGrafica");
        }
    
        public virtual ObjectResult<SP_PV_Reporte_VentasG_Result> SP_PV_Reporte_VentasG(Nullable<System.DateTime> inFechaInicial, Nullable<System.DateTime> inFechaFinal, Nullable<int> inScucursalId)
        {
            var inFechaInicialParameter = inFechaInicial.HasValue ?
                new ObjectParameter("inFechaInicial", inFechaInicial) :
                new ObjectParameter("inFechaInicial", typeof(System.DateTime));
    
            var inFechaFinalParameter = inFechaFinal.HasValue ?
                new ObjectParameter("inFechaFinal", inFechaFinal) :
                new ObjectParameter("inFechaFinal", typeof(System.DateTime));
    
            var inScucursalIdParameter = inScucursalId.HasValue ?
                new ObjectParameter("inScucursalId", inScucursalId) :
                new ObjectParameter("inScucursalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_VentasG_Result>("SP_PV_Reporte_VentasG", inFechaInicialParameter, inFechaFinalParameter, inScucursalIdParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_VentasGD_Result> SP_PV_Reporte_VentasGD(Nullable<System.DateTime> inFechaInicial, Nullable<System.DateTime> inFechaFinal, Nullable<int> inScucursalId)
        {
            var inFechaInicialParameter = inFechaInicial.HasValue ?
                new ObjectParameter("inFechaInicial", inFechaInicial) :
                new ObjectParameter("inFechaInicial", typeof(System.DateTime));
    
            var inFechaFinalParameter = inFechaFinal.HasValue ?
                new ObjectParameter("inFechaFinal", inFechaFinal) :
                new ObjectParameter("inFechaFinal", typeof(System.DateTime));
    
            var inScucursalIdParameter = inScucursalId.HasValue ?
                new ObjectParameter("inScucursalId", inScucursalId) :
                new ObjectParameter("inScucursalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_VentasGD_Result>("SP_PV_Reporte_VentasGD", inFechaInicialParameter, inFechaFinalParameter, inScucursalIdParameter);
        }
    
        public virtual ObjectResult<string> SP_ActualizarInventarios_Ventas(Nullable<int> ventaId)
        {
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("ventaId", ventaId) :
                new ObjectParameter("ventaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ActualizarInventarios_Ventas", ventaIdParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Citas_Result> SP_Reporte_Citas(string nombreDoc, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> estatus, Nullable<int> empresaId)
        {
            var nombreDocParameter = nombreDoc != null ?
                new ObjectParameter("nombreDoc", nombreDoc) :
                new ObjectParameter("nombreDoc", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("estatus", estatus) :
                new ObjectParameter("estatus", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("empresaId", empresaId) :
                new ObjectParameter("empresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Citas_Result>("SP_Reporte_Citas", nombreDocParameter, fechaInicioParameter, fechaFinParameter, estatusParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Beneficios_Result> SP_Reporte_Beneficios(string nombreDoc, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> empresaId)
        {
            var nombreDocParameter = nombreDoc != null ?
                new ObjectParameter("nombreDoc", nombreDoc) :
                new ObjectParameter("nombreDoc", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("empresaId", empresaId) :
                new ObjectParameter("empresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Beneficios_Result>("SP_Reporte_Beneficios", nombreDocParameter, fechaInicioParameter, fechaFinParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<SP_PV_Reporte_Consumo_Agrupado_Result> SP_PV_Reporte_Consumo_Agrupado(Nullable<int> inSucursalIda, Nullable<System.DateTime> fechaInicioa, Nullable<System.DateTime> fechaFinala, Nullable<int> familiaIda)
        {
            var inSucursalIdaParameter = inSucursalIda.HasValue ?
                new ObjectParameter("inSucursalIda", inSucursalIda) :
                new ObjectParameter("inSucursalIda", typeof(int));
    
            var fechaInicioaParameter = fechaInicioa.HasValue ?
                new ObjectParameter("fechaInicioa", fechaInicioa) :
                new ObjectParameter("fechaInicioa", typeof(System.DateTime));
    
            var fechaFinalaParameter = fechaFinala.HasValue ?
                new ObjectParameter("fechaFinala", fechaFinala) :
                new ObjectParameter("fechaFinala", typeof(System.DateTime));
    
            var familiaIdaParameter = familiaIda.HasValue ?
                new ObjectParameter("familiaIda", familiaIda) :
                new ObjectParameter("familiaIda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PV_Reporte_Consumo_Agrupado_Result>("SP_PV_Reporte_Consumo_Agrupado", inSucursalIdaParameter, fechaInicioaParameter, fechaFinalaParameter, familiaIdaParameter);
        }
    
        public virtual ObjectResult<SP_Obtener_Sucursales_Poligono_Result> SP_Obtener_Sucursales_Poligono(Nullable<float> latitud, Nullable<float> longitud, Nullable<int> dia)
        {
            var latitudParameter = latitud.HasValue ?
                new ObjectParameter("latitud", latitud) :
                new ObjectParameter("latitud", typeof(float));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("longitud", longitud) :
                new ObjectParameter("longitud", typeof(float));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Obtener_Sucursales_Poligono_Result>("SP_Obtener_Sucursales_Poligono", latitudParameter, longitudParameter, diaParameter);
        }
    
        public virtual ObjectResult<SP_Obtener_Sucursales_Activas_Result> SP_Obtener_Sucursales_Activas(Nullable<int> dia)
        {
            var diaParameter = dia.HasValue ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Obtener_Sucursales_Activas_Result>("SP_Obtener_Sucursales_Activas", diaParameter);
        }
    
        public virtual ObjectResult<SP_Obtener_Colonias_Result> SP_Obtener_Colonias(Nullable<float> latitud, Nullable<float> longitud, Nullable<int> sucursalId, string codigoPostal)
        {
            var latitudParameter = latitud.HasValue ?
                new ObjectParameter("latitud", latitud) :
                new ObjectParameter("latitud", typeof(float));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("longitud", longitud) :
                new ObjectParameter("longitud", typeof(float));
    
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("sucursalId", sucursalId) :
                new ObjectParameter("sucursalId", typeof(int));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("codigoPostal", codigoPostal) :
                new ObjectParameter("codigoPostal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Obtener_Colonias_Result>("SP_Obtener_Colonias", latitudParameter, longitudParameter, sucursalIdParameter, codigoPostalParameter);
        }
    
        public virtual int SP_Verificar_Cobertura(Nullable<float> latitud, Nullable<float> longitud, Nullable<int> sucursalId, ObjectParameter verificado)
        {
            var latitudParameter = latitud.HasValue ?
                new ObjectParameter("latitud", latitud) :
                new ObjectParameter("latitud", typeof(float));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("longitud", longitud) :
                new ObjectParameter("longitud", typeof(float));
    
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("sucursalId", sucursalId) :
                new ObjectParameter("sucursalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Verificar_Cobertura", latitudParameter, longitudParameter, sucursalIdParameter, verificado);
        }
    
        public virtual ObjectResult<SP_Verificar_Datos_Entrega_Pedido_Result> SP_Verificar_Datos_Entrega_Pedido(Nullable<int> sucursalId, Nullable<int> dia, string nombreColonia, string codigoPostal, Nullable<float> latitud, Nullable<float> longitud)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("sucursalId", sucursalId) :
                new ObjectParameter("sucursalId", typeof(int));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(int));
    
            var nombreColoniaParameter = nombreColonia != null ?
                new ObjectParameter("nombreColonia", nombreColonia) :
                new ObjectParameter("nombreColonia", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("codigoPostal", codigoPostal) :
                new ObjectParameter("codigoPostal", typeof(string));
    
            var latitudParameter = latitud.HasValue ?
                new ObjectParameter("latitud", latitud) :
                new ObjectParameter("latitud", typeof(float));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("longitud", longitud) :
                new ObjectParameter("longitud", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Verificar_Datos_Entrega_Pedido_Result>("SP_Verificar_Datos_Entrega_Pedido", sucursalIdParameter, diaParameter, nombreColoniaParameter, codigoPostalParameter, latitudParameter, longitudParameter);
        }
    }
}
