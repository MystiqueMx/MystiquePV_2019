@using MystiqueMC.Helpers
@using MystiqueMC.Helpers.Permissions

@{
    string rol = Session.ObtenerRol();
    PermissionsDelegate permissionsDelegate = new PermissionsDelegate(Session.ObtenerPermisos());
}
@model MystiqueMC.DAL.CatConceptosGastos

@{
    ViewBag.Title = "Agregar Concepto de Gasto";

    var rubros = ViewBag.Rubros as IEnumerable<SelectListItem>;
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Agregar Concepto de Gasto</h2>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    @using (Html.BeginForm("Create", "CatConceptosGastos", FormMethod.Post, new { @class = "form-horizontal", role = "form", data_parsley_validate = "true", autocomplete = "off" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="form-horizontal">

                            <div class="form-group">
                                <div class="col-lg-12">

                                    <div class="col-md-4">
                                        <label for="catRubroId">Rubro</label>
                                        <div>
                                            <select id="rubro" name="@Html.NameFor(m => m.catRubroId)" class="form-control selectpicker" data-live-search="true"
                                                    data-size="6" data-parsley-required data-parsley-errors-cointainer="#error-rubro">
                                                <option value="">Seleccionar</option>
                                                @foreach (var item in rubros)
                                                {
                                                    <option data-text="@item.Text" value="@item.Value" @(item.Selected ? "selected" : "")>@item.Text</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="row">
                                            <span style="color:red" for="@Html.NameFor(m => m.catRubroId)" id="#error-rubro"></span>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        @Html.Label("Descripción", htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.descripcion, new
                                        {
                                            htmlAttributes = new
                                            {
                                                @class = "form-control",
                                        data_parsley_maxlength = "300",
                                        data_parsley_required = "true",
                                        data_inputmask_regex = "[a-zA-ZñÑáéíóúÁÉÍÓÚ. ]{0,300}",
                                        maxlength = "300",
                                        data_parsley_errors_container = "#descripcion-error"
                                        })
                                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger parsley-required" })
                                        <div class="row">
                                            <span style="color:red" for="descripcion" id="descripcion-error"></span>
                                        </div>
                                    </div>

                                    <div class="col-md-2">
                                        @Html.Label("¿Activo?", htmlAttributes: new { @class = "control-label" })
                                        <div style="text-align:center;">
                                            @Html.CheckBoxFor(model => model.activo, new { @class = "checkbox checkbox-primary custom-checkbox" })
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-4">
                                        <input type="submit" value="Agregar" class="btn btn-primary" />
                                        @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })
                                    </div>
                                </div>
                            </div>



                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/plugins/parsley/parsley.min.js"></script>
    <script src="~/Scripts/plugins/parsley/parsley.es.js"></script>
    <script src="~/Scripts/plugins/parsley/validators/comparison.js"></script>
}