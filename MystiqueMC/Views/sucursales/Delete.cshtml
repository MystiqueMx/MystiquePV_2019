@using MystiqueMC.Helpers
@using MystiqueMC.Helpers.Permissions
@{
    /**/

    string rol = Session.ObtenerRol();
    PermissionsDelegate permissionsDelegate = new PermissionsDelegate(Session.ObtenerPermisos());
}
@model MystiqueMC.DAL.sucursales

@{
    ViewBag.Title = "Eliminar";

}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Eliminar</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <h4 class="text-danger">¿Estás seguro que deseas removerlo?</h4>
                    <dl class="dl-horizontal">
                        <dt>
                            Nombre Comercial
                            @*@Html.DisplayNameFor(model => model.comercios.nombreComercial)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.comercios.nombreComercial)
                        </dd>
                        <dt>
                            Nombre
                            @*@Html.DisplayNameFor(model => model.nombre)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.nombre)
                        </dd>
                        <dt>
                            Colonia
                            @*@Html.DisplayNameFor(model => model.direccion.calle)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.direccion.colonia)
                        </dd>
                        <dt>
                            Calle
                            @*@Html.DisplayNameFor(model => model.direccion.calle)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.direccion.calle)
                        </dd>
                        <dt>
                            No. Interior
                            @*@Html.DisplayNameFor(model => model.direccion.calle)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.direccion.numInterior)
                        </dd>
                        <dt>
                            No. Exterior
                            @*@Html.DisplayNameFor(model => model.direccion.calle)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.direccion.numExterior)
                        </dd>
                        <dt>
                            Codigo Postal
                            @*@Html.DisplayNameFor(model => model.direccion.calle)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.direccion.codigoPostal)
                        </dd>
                        <dt>
                            Entre calles
                            @*@Html.DisplayNameFor(model => model.direccion.calle)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.direccion.entreCalles)
                        </dd>
                        <dt>
                            Estado
                            @*@Html.DisplayNameFor(model => model.direccion.calle)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.direccion.catEstados.estadoDescr)
                        </dd>
                        <dt>
                            Ciudad
                            @*@Html.DisplayNameFor(model => model.direccion.calle)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.direccion.catCiudades.ciudadDescr)
                        </dd>
                        <dt>
                            Nombre usuario
                            @*@Html.DisplayNameFor(model => model.direccion.calle)*@
                        </dt>
                        <dd>
                            
                            @Html.DisplayFor(model => model.usuarios.nombre)
                        </dd>
                        <dt>
                            Telefono
                            @*@Html.DisplayNameFor(model => model.telefono)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.telefono)
                        </dd>
                        <dt>
                            Fecha Registro
                            @*@Html.DisplayNameFor(model => model.fechaRegistro)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.fechaRegistro)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.activo)
                        </dt>
                        <dd>
                            @if (Model.activo == true)
                            {
                                <span>Activo</span>
                            }
                            else
                            {
                                <span>Inactivo</span>
                            }
                        </dd>
                        <dt>
                            Punto Venta
                            @*@Html.DisplayNameFor(model => model.sucursalPuntoVenta)*@
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.sucursalPuntoVenta)
                        </dd>
                        <dt>
                            Horario
                            @*@Html.DisplayNameFor(model => model.sucursalPuntoVenta)*@
                        </dt>
                        <dd>
                            @Model.sucursalHorarios.Select(c => c.diasNum).FirstOrDefault() @Model.sucursalHorarios.Select(c => c.horarioInicio).FirstOrDefault() - @Model.sucursalHorarios.Select(c => c.horarioFin).FirstOrDefault()
                        </dd>
                    </dl>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-actions no-color">
                            @if (permissionsDelegate.HasPermissionForAction(rol, HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString(), "Delete"))
                            {
                                <input type="submit" value="Eliminar" class="btn btn-danger" />
                            }
                            @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-white" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


