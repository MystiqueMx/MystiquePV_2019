@model MystiqueMC.DAL.Insumos

@{
    ViewBag.Title = "Edit";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-12">
        <h2>Editar Insumo <b>@Model.nombre</b></h2>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    @using (Html.BeginForm("Edit", "Insumos", FormMethod.Post, new { id = "form-create", data_parsley_validate = "true" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="comercioId" id="comercioId" value="@ViewBag.comercioId" />
                        <input type="hidden" name="CategoriaInsumoSearch" id="CategoriaInsumoSearch" value="@ViewBag.CategoriaInsumoSearch" />
                        <input type="hidden" name="NombreSearch" id="NombreSearch" value="@ViewBag.NombreSearch" />
                        <input type="hidden" name="Estatus" id="Estatus" value="@ViewBag.Estatus" />
                        @Html.HiddenFor(model => model.idInsumo)

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                <div class="col-lg-12">
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new {
                                            @class = "form-control", data_parsley_maxlength = "80", data_parsley_required = "true",
                                            data_inputmask_regex = "[a-zA-ZñÑáéíóúÁÉÍÓÚ0-9. ]{0,30}", data_parsley_errors_container = "#nombre-error" } })
                                        <div class="row">
                                            <span style="color:red" for="descripcion" id="nombre-error"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.categoriaInsumoId, "Familia", htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownList("categoriaInsumoId", null, htmlAttributes: new { @class = "form-control" ,
                                            data_parsley_required = "true", data_parsley_errors_container = "#categoriaInsumoId-error" })
                                        <div class="row">
                                            <span style="color:red" for="descripcion" id="categoriaInsumoId-error"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.catRubroId, "Rubro", htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownList("catRubroId", null, "No aplica",htmlAttributes: new {
                                            @class = "form-control", data_parsley_errors_container = "#catRubroId-error" })
                                        <div class="row">
                                            <span style="color:red" for="descripcion" id="catRubroId-error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-2 col-lg-2">
                                        @Html.Label("Unidad de medida a comprar", htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-2 col-lg-2">
                                        @Html.DropDownList("unidadMedidaIdCompra", null, "Seleccionar", htmlAttributes: new
                                        { @class = "form-control",
                                          data_parsley_required = "true",
                                          data_parsley_errors_container = "#unidadMedidaIdCompra-error",
                                        })
                                        <div class="row">
                                            <span style="color:red" for="descripcion" id="unidadMedidaIdCompra-error"></span>
                                        </div>
                                    </div>

                                    @Html.Label("equivale a", htmlAttributes: new { @class = "control-label col-md-1 text-left" })
                                    <div class="col-md-2 col-lg-2">
                                        @Html.EditorFor(model => model.equivalencia, new { htmlAttributes = new
                                   { @class = "form-control",
                                       data_parsley_maxlength = "10",
                                       data_inputmask_regex = "[0-9,]{0,10}([.][0-9]{0,2})?",
                                       data_parsley_required = "true",
                                       data_parsley_errors_container = "#equivalencia-error",
                                       placeholder = "0",
                                       data_parsley_gt = "0",
                                       data_parsley_gt_message = "No se permiten ceros",
                                       onkeyup = "javascript:setValue(this.value);",
                                       @Value = Model.equivalencia.Value.ToString("N2"),
                                   }
                                   })
                                        <div class="row">
                                            <span style="color:red" for="descripcion" id="equivalencia-error"></span>
                                        </div>
                                    </div>

                                    <div class="col-md-2 col-lg-1">
                                        @Html.DropDownList("unidadMedidaIdMinima", null, "Seleccionar", htmlAttributes: new
                                      { @class = "form-control",
                                       data_parsley_required = "true",
                                       data_parsley_errors_container = "#unidadMedidaIdMinima-error",

                                      })
                                        <div class="row">
                                            <span style="color:red" for="descripcion" id="unidadMedidaIdMinima-error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-12 " style="margin-top:-18px">
                                    @Html.HiddenFor(model => model.activo)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-10">
                                    <div class="col-lg-4">
                                        <button type="submit" class="btn btn-primary" id="btn-guardar">Guardar</button>
                                        @Html.ActionLink("Cancelar", "Index", new { CategoriaInsumo = ViewBag.CategoriaInsumoSearch, Nombre = ViewBag.NombreSearch, Estatus = ViewBag.Estatus }, new { @class = "btn btn-white" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{

    <script src="~/Scripts/plugins/parsley/parsley.min.js"></script>
    <script src="~/Scripts/plugins/parsley/parsley.es.js"></script>
    <script src="~/Scripts/plugins/parsley/validators/comparison.js"></script>
    <script>

        $("#form-create").on("submit", function () {

            var equivalencia = $("#equivalencia");
            equivalencia.val(equivalencia.val().replace(',', ''));

            return true;
        });

        function setValue(value) {
            var field = document.getElementById('equivalencia');

            var start = field.selectionStart, end = field.selectionEnd;
            $("input[name=Reference]").val(field.value);

            field.value = Comma(value);

            field.setSelectionRange(start, end);
        }

        function Comma(Num) {

            var number = parseInt(Num.replace(',', ''));

            if (Number.isInteger(number)) {
                Num += '';
                Num = Num.replace(',', '');
                Num = Num.replace(',', '');
                Num = Num.replace(',', '');
                Num = Num.replace(',', '');
                Num = Num.replace(',', '');
                Num = Num.replace(',', '');
                x = Num.split('.');
                x1 = x[0];
                x2 = x.length > 1 ? '.' + x[1] : '';
                var rgx = /(\d+)(\d{3})/;
                while (rgx.test(x1))
                    x1 = x1.replace(rgx, '$1' + ',' + '$2');

                return x1 + x2;
            }
        }

    </script>
}
@section Styles {
}